addl    LOCATION    LITERAL        *  (ADD ACCUMULATOR with LITERAL and store in LOCATION)
addw    LOCATION                   *  (ADD ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
andl    LOCATION    LITERAL        *  (AND ACCUMULATOR with LITERAL and store in LOCATION)
andw    LOCATION                   *  (AND ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
orl     LOCATION    LITERAL        *  (OR ACCUMULATOR with LITERAL and store in LOCATION)
orw     LOCATION                   *  (OR ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
nandw   LOCATION                   *  (NAND ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
norw    LOCATION                   *  (NOR ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
xorl    LOCATION    LITERAL        *  (XOR ACCUMULATOR with LITERAL and store in LOCATION)
xorw    LOCATION                   *  (XOR ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
xnorw   LOCATION                   *  (XNOR ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
notw    LOCATION                   *  (INVERT ACCUMULATOR store in LOCATION)
clrw    LOCATION                   *  (CLEAR LOCATION)
subl    LOCATION    LITERAL        *  (SUBTRACT ACCUMULATOR with LITERAL and store in LOCATION)
subw    LOCATION    LITERAL        *  (SUBTRACT ACCUMULATOR with value in LOCATION store in ACCUMULATOR)
mul     LOCATION                   *  (MULTIPLY the ACCUMULATOR'S MSBits with the LSBits store in LOCATION)
shftl   LOCATION                   *  (SHIFTLEFT ACCUMULATOR store in LOCATION)
shftr   LOCATION                   *  (SHIFTRIGHT ACCUMULATOR store in LOCATION)
rotl    LOCATION                   *  (ROTATELEFT ACCUMULATOR store in LOCATION)
rotr    LOCATION                   *  (ROTATERIGHT ACCUMULATOR store in LOCATION)
movl    LOCATION    LITERAL        *  (MOVE LITERAL to LOCATION)
movw    LOCATION    ADDRESS        *  (MOVE LOCATION to RAM ADDRESS)
movr    LOCATION    ADDRESS        *  (MOVE data in RAM ADDRESS to LOCATION)
mova    LOCATION                   *  (MOVE LOCATION to ACCUMULATOR)
nop                                *  (NO OPERATION)
halt                               *  (STOP the program)
goto                ADDRESS        *  (GOTO ADDRESS -- 6 bits)
skipn                              *  (SKIP next instruction if ACCUMULATOR is NEGATIVE)
skipz                              *  (SKIP next instruction if ACCUMULATOR is ZERO)
skipnz                             *  (SKIP next instruction if ACCUMULATOR is NOT ZERO)
movf    LOCATION                   *  (MOVE ACCUMULATOR to LOCATION)
NOT USED                           *  (NOT USED -- Saved for RETURN from function once implemented)
